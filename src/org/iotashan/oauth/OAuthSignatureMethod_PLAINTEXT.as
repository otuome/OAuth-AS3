package org.iotashan.oauth
{
	/**
	 * Used to sign requests using a plain text secret.
	 * @author Hasan Otuome
	 */
	public class OAuthSignatureMethod_PLAINTEXT implements IOAuthSignatureMethod
	{
		///////////////////////////////////////////////////////////////////////////////////////////////
		// PRIVATE PROPERTIES
		///////////////////////////////////////////////////////////////////////////////////////////////
		
		///////////////////////////////////////////////////////////////////////////////////////////////
		// PUBLIC PROPERTIES
		///////////////////////////////////////////////////////////////////////////////////////////////
		
		///////////////////////////////////////////////////////////////////////////////////////////////
		// PUBLIC METHODS
		///////////////////////////////////////////////////////////////////////////////////////////////
		/**
		 * Constructor
		 */		
		public function OAuthSignatureMethod_PLAINTEXT()
		{
		}
		/**
		 * Returns the name of the signature method. 
		 * @return String
		 */		
		public function get name():String
		{
			return "PLAINTEXT";
		}
		/**
		 * Signs the specified request. 
		 * @param request
		 * @return String
		 */		
		public function signRequest( request:OAuthRequest ):String
		{
			var sSec:String = request.consumer.secret + "&"
			if (request.token)
				sSec += request.token.secret;
			
			return sSec;
		}
		
		///////////////////////////////////////////////////////////////////////////////////////////////
		// OVERRIDES
		///////////////////////////////////////////////////////////////////////////////////////////////
		
		///////////////////////////////////////////////////////////////////////////////////////////////
		// PRIVATE METHODS
		///////////////////////////////////////////////////////////////////////////////////////////////
	}
}